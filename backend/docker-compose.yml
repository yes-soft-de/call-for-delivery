version: '3'

networks:
  c4d-backend:

services:
  # nginx
  nginx-service:
    container_name: nginx-c4d
    image: nginx:stable-alpine
    ports:
      - '8080:80'
    volumes:
      - ./:/var/www/c4d-backend
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php8-service
      - database
    networks:
      - c4d-backend

  # php
  php8-service:
    container_name: php8-c4d
    build:
      context: ./php
    ports:
      - '9000:9000'
    volumes:
      - ./:/var/www/c4d-backend
    depends_on:
      - database
    networks:
      - c4d-backend

  # mysql
  database:
    container_name: mysql8-c4d-db
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: secret
#      MYSQL_DATABASE: symfony_docker
#      MYSQL_USER: symfony
      MYSQL_PASSWORD: secret
    ports:
      - '4306:3306'
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - c4d-backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-c4d
    environment:
      PMA_HOST: database
    links:
      - database
    ports:
      - "8081:80"
    networks:
      - c4d-backend

###> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-13}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
#      POSTGRES_USER: ${POSTGRES_USER:-symfony}
#    volumes:
#      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

#volumes:
####> doctrine/doctrine-bundle ###
#  db-data:
####< doctrine/doctrine-bundle ###
